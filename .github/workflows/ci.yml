name: 'React Native Continuous Integration'

'on':
  pull_request:
    branches: [master]

jobs:
  test_pull_request:
    name: Test and Build
    runs-on: ubuntu-latest
    steps:
      - name: Setup Repo
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Cache Node Modules
        uses: actions/cache@v2
        env: 
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Dependency Packages
        run: npm i
      # Perform a type check if using typescript before testing
      - name: Typecheck
        run: npx --no-install tsc --noEmit
      - name: Check Lint
        run: npm run lint
    deploy_branch_preview:
      name: Deploy Branch Preview
      needs: test
      runs-on: ubuntu-latest
      steps: 
        - uses: actions/checkout@v2
        - uses: actions/setup-node@v1
          with: 
            node-version: 12.x
        - uses: expo/expo-github-actions@v5
          with: 
            expo-packager: npm
            expo-token: ${{ secrets.EXPO_TOKEN }}
            expo-cache: true
          
        - name: Cache Node Modules
        - uses: actions/cache@v2
          env:
            cache-name: cache-node-modules
          with: 
            path: ~/.npm
            key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
            restore-keys: |
              ${{ runner.os }}-build-${{ env.cache-name }}-
              ${{ runner.os }}-build-
              ${{ runner.os }}-
        - name: Install Dependency Packages
          run : npm i
        - name: Expo Publish Channel
          run: expo publish --non-interactive --release-channel pr${{ github.event.number }}
        - name: Add Comment To PR
          uses: mshick/add-pr-comment@v1
          env: 
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            EXPO_PROJECT: "@victorbruce/outfit"
          with:  
            message: |
              ## Application
              ![Expo QR](https://api.qrserver.com/v1/create-qr-code/?size=250x250&data=exp://exp.host/${{ env.EXPO_PROJECT }}?release-channel=pr${{ github.event.number }})
              Published to https://exp.host/${{ env.EXPO_PROJECT }}?release-channel=pr${{ github.event.number }}

